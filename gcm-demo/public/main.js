// Generated by CoffeeScript 1.7.1
(function() {
  var g;

  g = {
    combo: null,
    classTable: {
      warrior: {
        sprite: '08sprite',
        atk: 100,
        def: 100,
        maxHp: 100,
        maxMp: 100
      },
      wizard: {
        sprite: '11sprite',
        atk: 140,
        def: 80,
        maxHp: 80,
        maxMp: 120
      },
      sorcerer: {
        sprite: '12sprite',
        atk: 120,
        def: 120,
        maxHp: 80,
        maxMp: 120
      },
      monk: {
        sprite: '13sprite',
        atk: 120,
        def: 120,
        maxHp: 120,
        maxMp: 50
      },
      priest: {
        sprite: '15sprite',
        atk: 80,
        def: 80,
        maxHp: 80,
        maxMp: 150
      },
      elementalist: {
        sprite: '16sprite',
        atk: 100,
        def: 100,
        maxHp: 100,
        maxMp: 100
      },
      thief: {
        sprite: '17sprite',
        atk: 100,
        def: 80,
        maxHp: 100,
        maxMp: 120
      },
      bard: {
        sprite: '18sprite',
        atk: 80,
        def: 80,
        maxHp: 120,
        maxMp: 120
      }
    }
  };

  zebra.ready(function() {
    var btn, classList, height, image, imageLabel, imageList, k, label, lst, panel, pic, root, textField, v, width, _ref;
    eval(zebra.Import("ui", "layout"));
    root = (new zCanvas('loginCanvas', 800, 450)).root;
    classList = (function() {
      var _results;
      _results = [];
      for (k in g.classTable) {
        _results.push(k);
      }
      return _results;
    })();
    imageList = [];
    _ref = g.classTable;
    for (k in _ref) {
      v = _ref[k];
      image = new Image;
      image.src = "res/pc/" + v.sprite + ".png";
      width = image.naturalWidth / 4;
      height = image.naturalHeight / 4;
      pic = new Picture(image, 0, 0, width, height);
      v.image = pic;
      imageList.push(pic);
    }
    panel = new Panel;
    panel.setBounds(0, 0, 800, 450);
    root.add(panel);
    label = new Label('캐릭터명을 입력하세요 (영문, 최대 12자)');
    label.setBounds(0, 0, 400, 50);
    label.setLocation(100, 30);
    textField = new TextField('', 20);
    textField.setBounds(0, 0, 200, 30);
    textField.setLocation(100, 60);
    imageLabel = new ImagePan(imageList[0]);
    imageLabel.setBounds(0, 0, 200, 200);
    imageLabel.setLocation(420, 100);
    lst = new List(classList);
    lst.setBounds(0, 0, 300, 300);
    lst.setLocation(100, 100);
    lst.select(0);
    lst.bind(function(src, prev) {
      console.log(src.getSelected());
      return imageLabel.setImage(g.classTable[src.getSelected()].image);
    });
    btn = new Button('입장');
    btn.setBounds(0, 0, 100, 30);
    btn.setLocation(620, 380);
    btn.bind(function(src) {
      var name, sprite;
      name = textField.getValue();
      if (name.length === 0) {
        return;
      }
      sprite = g.classTable[lst.getSelected()].sprite;
      socket.emit('cLogin', {
        name: name,
        sprite: sprite
      });
      $('#loginCanvas').hide();
      $('#gameCanvas').show();
      return cc.game.run();
    });
    panel.add(label);
    panel.add(textField);
    panel.add(lst);
    panel.add(imageLabel);
    panel.add(btn);
    return $('#gameCanvas').hide();
  });

  cc.game.onStart = function() {
    cc.view.setDesignResolutionSize(800, 450, cc.ResolutionPolicy.SHOW_ALL);
    cc.view.resizeWithBrowserSize(true);
    return cc.LoaderScene.preload(g_resources, function() {
      return cc.director.runScene(new GameScene);
    }, this);
  };

}).call(this);

//# sourceMappingURL=main.map
